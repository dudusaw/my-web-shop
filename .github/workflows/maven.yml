# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
        
    - name: Build with Maven
      run: mvn -B -e package --file pom.xml
          
    - name: copy files to remote
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        source: "**/*.jar, docker/Dockerfile"
        target: "~/my-web-shop"
        strip_components: 1
        
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      env:
        SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
        SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
        SSL_KEY_STORE_PASSWORD: ${{ secrets.SSL_KEY_STORE_PASSWORD }}
        SPRING_PROFILES_ACTIVE: ${{ secrets.SPRING_PROFILES_ACTIVE }}
        STORAGE_LOCATION: ${{ secrets.STORAGE_LOCATION }}
      with:
        host: ${{ secrets.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        envs: |
          SPRING_DATASOURCE_URL,
          SPRING_DATASOURCE_PASSWORD,
          SSL_KEY_STORE_PASSWORD,
          SPRING_PROFILES_ACTIVE,
          STORAGE_LOCATION
        script: |
          cd ~/my-web-shop
          ls -l
          export PROJECT_DIR=/opt/my-app/
          docker stop my-app-cnt
          docker rm my-app-cnt
          docker build --build-arg PROJECT_DIR=$PROJECT_DIR -t my-app:latest .
          docker run -d --name my-app-cnt --network="host" \
            -v $HOME/certs/:$PROJECT_DIR/certs/:ro \
            -v /var/my-vol/data/:$PROJECT_DIR/data/ \
            -e "SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL" \
            -e "SPRING_DATASOURCE_PASSWORD=$SPRING_DATASOURCE_PASSWORD" \
            -e "SSL_KEY_STORE_PATH=$PROJECT_DIR/certs/cert.p12" \
            -e "STORAGE_LOCATION=$PROJECT_DIR/data/" \
            -e "SSL_KEY_STORE_PASSWORD=$SSL_KEY_STORE_PASSWORD" \
            -e "spring_profiles_active=$SPRING_PROFILES_ACTIVE" \
            --restart always my-app:latest
