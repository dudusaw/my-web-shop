# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Build with Maven
      run: mvn -B -e package --file pom.xml
      
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: copy files to remote
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        source: "target/*.jar, docker/Dockerfile"
        target: "~/my-web-shop"
        strip_components: 1
        
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      env:
        SPRING_DATASOURCE_URL: ${{  secrets.SPRING_DATASOURCE_URL  }}
        SPRING_DATASOURCE_PASSWORD: ${{  secrets.SPRING_DATASOURCE_PASSWORD  }}
        SSL_KEY_STORE_PATH: ${{  secrets.SSL_KEY_STORE_PATH  }}
        SSL_KEY_STORE_PASSWORD: ${{  secrets.SSL_KEY_STORE_PASSWORD  }}
      with:
        host: ${{ secrets.HOST }}
        username: root
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd ~/my-web-shop
          docker stop my-app-cnt
          docker rm my-app-cnt
          docker build -t my-app:latest .
          docker run -d --name my-app-cnt -p 8443:8443 -v /var/my-vol/data:/data --restart always \
            -e SPRING_DATASOURCE_URL="$SPRING_DATASOURCE_URL" \
            -e SPRING_DATASOURCE_PASSWORD="$SPRING_DATASOURCE_PASSWORD" \
            -e SSL_KEY_STORE_PATH="$SSL_KEY_STORE_PATH" \
            -e SSL_KEY_STORE_PASSWORD="$SSL_KEY_STORE_PASSWORD" \
            -e spring_profiles_active=local-storage \
            my-app:latest